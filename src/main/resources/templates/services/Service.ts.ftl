/**
* Generated by unionj-generator.
*/
import BizService from "./BizService";
import type {
<#list reqBodyList as reqBody>
  ${reqBody.name?capitalize},
</#list>
} from "./types.ts"


export default class ${name?capitalize} extends BizService{

  constructor(axios: any) {
    super(axios);
  }

  <#list routers as router>
    ${router.name}(
    <#if router.pathParams??>
      <#list router.pathParams as pathParam>
        ${pathParam.name}: ${pathParam.type},
      </#list>
    </#if>
    <#if router.queryParams??>
      <#list router.queryParams as queryParam>
        ${queryParam.name}: ${queryParam.type},
      </#list>
    </#if>
    <#if router.reqBody??>
      payload: ${router.reqBody.name?capitalize},
    </#if>
    ) :Promise<any> {
    let client = this.axios.${router.httpMethod?lower_case}
    if(this.axios.$${router.httpMethod?lower_case}) {
      client = this.axios.$${router.httpMethod?lower_case}
    }
    return client(this.addPrefix("${router.endpoint}"),
    <#if router.reqBody??>
      payload,
    </#if>
  <#if router.queryParams??>
    {
      params: {
    <#list router.queryParams as queryParam>
      ${queryParam.name},
    </#list>
    },
    }
  </#if>
  )}
  </#list>
}
