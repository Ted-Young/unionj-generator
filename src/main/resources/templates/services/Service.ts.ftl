/**
* Generated by unionj-generator.
*/
import type { NuxtAxiosInstance } from "@nuxtjs/axios";
import BizService from "./BizService";

<#list reqBodyList as reqBody>
  interface ${reqBody.name?capitalize} {
    <#list reqBody.properties as property>
        ${property.name}: ${property.type};
    </#list>
  }
</#list>

export default class ${name?capitalize}Service extends BizService{

  constructor(axios: NuxtAxiosInstance) {
    super(axios);
  }

  <#list routers as router>
    ${router.name}(
    <#if router.pathParams??>
      <#list router.pathParams as pathParam>
        ${pathParam.name}: ${pathParam.type},
      </#list>
    </#if>
    <#if router.queryParams??>
      <#list router.queryParams as queryParam>
        ${queryParam.name}: ${queryParam.type},
      </#list>
    </#if>
    <#if router.reqBody??>
      payload: ${router.reqBody.name},
    </#if>
    ) :Promise<any> {
    return this.axios.$${router.httpMethod?lower_case}(this.addPrefix("${router.endpoint}"),
    <#if router.reqBody??>
      payload,
    </#if>
  <#if router.queryParams??>
    {
      params: {
    <#list router.queryParams as queryParam>
      ${queryParam.name},
    </#list>
    },
    }
  </#if>
  )}
  </#list>
}
