/**
* Generated by unionj-generator.
*/
import BizService from "./BizService";
import type {
<#list types as type>
  ${type},
</#list>
} from "./types"


export default class ${name} extends BizService{

  constructor(axios: any) {
    super(axios);
  }

<#list routers as router>
  ${router.name}(
  <#if router.pathParams??>
    <#list router.pathParams as pathParam>
      ${pathParam.name}: ${pathParam.type},
    </#list>
  </#if>
  <#if router.queryParams??>
    <#list router.queryParams as queryParam>
      ${queryParam.name}: ${queryParam.type},
    </#list>
  </#if>
  <#if router.reqBody??>
    ${router.reqBody.name}: ${router.reqBody.type},
  </#if>
  ) :Promise<${router.respData.type}> {
    let client = this.axios.${router.httpMethod?lower_case}
    if(this.axios.$${router.httpMethod?lower_case}) {
      client = this.axios.$${router.httpMethod?lower_case}
    }
    return client(this.addPrefix(`${router.endpoint}`),
        <#if router.reqBody??>
          payload,
        </#if>
        <#if router.queryParams??>
          {
            params: {
            <#list router.queryParams as queryParam>
              ${queryParam.name},
            </#list>
            },
          }
        </#if>
        )
  }

</#list>
}

